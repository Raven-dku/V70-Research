<?php

$zip = new ZipArchive;


// Grab a line from a file
$Input = "0x504B03041400000008007B1F474507B8610B9E040000C01300001000000030393030633861663834663834356537ED58DB6EE33610FD1541FB5AC7A42EB664D87EA893ED1A683745B2499F6989B6D995292D4925CEDF77485D7D9536DB7D285020802D6A38E7CC70CE0C9DA98C04CB94B5DF255C4E387D6172666F95CA26C3E1EBEBEBCD4B9ABCA41111F2264A77434E76546624A2729889143E24E31BBBDCBC4F18FF7AB0F9D5BD49C56688C3301C9AB7B615A7114F67F6F36231F0F0D81D79B6C5E2990DC0D81FFBE300B91CDB96E131A1FB2C1900CE9A257466EFE2C477DD37E1208C29DF3878F48BA5D73CE7CC9A7766CDBFBED729D7DA18CE197FCE197FCEA8E25CD3CD059FEC07078B13B442280AC83AF04207A130B03A8D30727B188D480F2332EA305AC541E88C3B8CA81F4791D3C3688DBB8D6267D5CADBDF3452501EF98E727592BFF6CB090A2A27F0E7D33AF982CA341711641F850716AB630BE710602DC8A6F07CB86F7CBCB0FA70B652A55642CA07BA946DEB5B4E12B6665430BE4ED55B067CB03741C8B68A0723984942F86666533E787AB4ADE5DD60795B3E1D73B0E753C55442E7D36C2B88A4564414DDA4E26D662FD25D9672207EAA22C7B60AF301047A944EB3DE6411613FC6CEDA9EDFF10DE3D49219A5F1745898CDA7C3123D4AB902286B933308C8B6B6946DB67052D847A7F0EEA07A1A87E17F5BD22C5E8B7477145E53B774CDF6175FFEDF0CDED30C2EEA38FCB7741C7E382ACF5716ABEDCCF6B44A8FD5399FF234A6B2A3C69DD2CE8A1222654B9BF2E65111A13EC3BB2E9DE8CA01336D64F60017D0D7D8B640EB01301B5E863063FCD75CA99477A1780DCA27A6490188830C8883420803145EABDBED14B75F670F6354380B0A6F18159CE1BC332AD45BC5FB5109736FB8EE570B10EE1B33FB0BDDABAA772E21BA1792E4A68DC291B395D6D78FC08C2B1893F15B2609B88C1B3C450527498DFA912492B6A0F10F400707D0CF85CB8BC84AE4A7C0901ACAF5ECE980D2C77A323E3E923C514A90A807577DB47D070A5E8D56D80DECB92EAFD620A9C9C2775D811DD57C65BA35DC00D38C97B2A017492A69B1BD108FBE619AC20EAEC96719C38799D9BD419D06F48192B8287CB742B34F6BE24F22E0B0E150BB3CBB555994F3F851CFE3AA2CEE73754E01FDAB412378408FD5215B34CAB5683D8CC00D3CFC0171017A947F01C82EB6207F01F1976A2F483EDC2D6F1BC57868A1D35185DFE16F74217A884D6F0C477E11EBB009E07B4AEBB79CDDD427F13B59D1A42BC07173D0A53D9CB43B0ACC497BC151BF1CA32E7F41DD2FDDA0E897B86A97677B49EFBA09ABCCB5765CEB9AEF6D5D4672A8EECEFA76F8B380B0D1B6C179D66E7F1E8E53E13C71A6FAC05C2FB3079A51D27966B83DF197604E542A8A92C07E31F583339D64D9D59DB099F1269CBF483B9CA391E26BC976A4AF07985F817D4EEFD745E4F22226BA9449F321E7D32DE1714285EC001D4162E80B24BBB4EF30AFC7FC3D2FAF56DC74B9E2017EDD9024E97001C205556D53307ACA62385D53FAB2F2544C81612F5761E3EA804D53033A2FEDF0BE2BD8469DF7BC388F13801E341D2DBE8A6611DD51A4EF65E834725B242CFA5A3936D7D15ECCDC869919F9B78C24E9A6F273700B38E55995783FAADEF981D44AC57C2AA9EAF0E2573BCA19527138E8D69AEA113958A904015FCBDFE0F0ADF8BFDDFC1F504B010214001400000008007B1F474507B8610B9E040000C013000010000000000000000000000000000000000030393030633861663834663834356537504B050600000000010001003E000000CC0400000000";

// Remove 0x Preamble, fucks up hex2bin function lol
$Input = substr($Input, 2);

// Convert HEX to Binary
$Output = hex2bin($Input);

// Save to folder as ZIP file
file_put_contents("test.zip", $Output);
// Unzip file and rename file inside to XML
$Result = $zip->open('test.zip');

$FileName = '';

if ($Result == TRUE) {
    for( $i = 0; $i < $zip->numFiles; $i++ ){
        $stat = $zip->statIndex( $i );
        if($Debug)
            print_r( "[DEBUG][ZIP] Found file with name ".basename( $stat['name'] ) . PHP_EOL );
    }
    $FileName = $stat['name'];
    $zip->extractTo('/');
    $zip->close();

    echo "Extracted".PHP_EOL ;


}

$xml = file_get_contents("$FileName", "r");
$xml = str_replace('nevis:expl-profile', 'cars', $xml);
$xml = simplexml_load_string($xml);

$result = xml2array($xml->attributes()->cars);

$Valid = false;

$CarArray = explode(",", trim($result[0]));

foreach($CarArray as $Car)
{
    $Car = trim($Car);

    foreach($ModelsAllowed as $Model)
    {
        if($Car === $Model)
            $Valid = true;
    }

}

if($Valid)
{
    // Fetched XML is compressed and ugly, we need to fix this before putting into final position.
    $xml->formatOutput = true;
    $xmlOutput = $xml->saveXML();

    // Revert SimpleXML hack.
    $xmlOutput = str_replace('cars=', 'nevis:expl-profile=', $xmlOutput);

    // Save file!
    file_put_contents("1.xml", $xmlOutput);

    echo " | SUCCESS".PHP_EOL;
}
else
    echo " | SKIPPING".PHP_EOL;


function xml2array ( $xmlObject, $out = array () )
{
    foreach ( (array) $xmlObject as $index => $node )
        $out[$index] = ( is_object ( $node ) ) ? xml2array ( $node ) : $node;

    return $out;
}
